---
- name: server user account setup
  # so that we don't try to log in with "pi" when it's gone
  gather_facts: no
  hosts: all
  remote_user: pi
  vars_files:
  - passwords.yml
  vars:
    server_user: butla
    ansible_become_pass: raspberry

  tasks:
  - name: detect default server user
    local_action: shell sshpass -p raspberry ssh pi@{{ inventory_hostname }} "echo connected..."
    register: pi_user_exists
    ignore_errors: true
  - name: create server user
    when: pi_user_exists.rc == 0
    user:
      name: "{{ server_user }}"
      groups: pi,adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,input,netdev,gpio,i2c,spi
      password: "{{server_user_password}}"
    become: true
  - name: set server user authorized ssh key
    when: pi_user_exists.rc == 0
    copy: src=authorized_keys dest=/home/{{ server_user }}/.ssh/
    become: true
    become_user: "{{ server_user }}"

# TODO przerob na role

- name: set up backup server
  hosts: all
  remote_user: butla
  become: true
  vars_files:
  - passwords.yml
  vars:
    ansible_become_pass: "{{ server_user_password_raw }}"
    new_hostname: danusipi3

  tasks:
  - name: kill pi user processes
    command: pkill -u pi
    register: pkill_out
    changed_when: pkill_out.rc == 0
    ignore_errors: true
  - name: remove pi user
    user: name=pi state=absent
  - name: ensure ntfs-3g is there for mounts
    apt:
      update_cache: yes
      cache_valid_time: 3600 
      name: ntfs-3g
      state: latest
  - name: mount drive for backups
    mount:
      name: /data
      src: 'UUID=3248F2D948F29AB5'
      fstype: ntfs-3g
      opts: rw,user,auto,fmask=0117,dmask=0007,gid=sudo
      state: mounted
  - name: install hdparm
    apt: name=hdparm state=latest
  - name: set disk spindown
    # 12 * 5 = 60 seconds
    command: hdparm -S 12 /dev/disk/by-uuid/3248F2D948F29AB5

- name: generic system update
  hosts: all
  remote_user: butla # TODO potem bez podawania hasla z vaulta, tylko od usera
  become: true
  vars_files:
  - passwords.yml
  vars:
    ansible_become_pass: "{{ server_user_password_raw }}"

  tasks:
  - name: american locale
    locale_gen: name=en_US.UTF-8 state=present
  - name: polish locale
    locale_gen: name=pl_PL.UTF-8 state=present
  - name: update package info
    apt: update_cache=yes cache_valid_time=3600
  - name: upgrade system
    apt: upgrade=dist

