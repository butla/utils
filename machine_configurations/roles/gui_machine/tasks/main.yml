---
- name: add dropbox repository
  become: true
  apt_repository: repo='deb http://linux.dropbox.com/ubuntu xenial main'

- name: add dropbox package key
  become: true
  apt_key: keyserver=pgp.mit.edu id=5044912E

- name: install python-gpgme for dropbox bootstrap
  become: true
  apt: name=python-gpgme

# TODO get rid of unauthorized deb workaround when they fix it
#- name: install dropbox
#  apt: name=dropbox update_cache=yes
#  become: true
- name: install dropbox
  become: true
  command: apt-get install -y --allow-unauthenticated dropbox
  register: dropbox_install
  changed_when: dropbox_install.stdout.find('is already the newest') == -1

- name: start and install dropbox daemon
  command: dropbox start -i
  register: dropbox_start
  changed_when: dropbox_start.stdout.find('is already running!') == -1

- name: create keepass configuration directory
  file: path={{ ansible_env.HOME }}/.config/KeePass state=directory

- name: set keepass configuration
  copy: src=KeePass.config.xml dest={{ ansible_env.HOME }}/.config/KeePass

- name: add inkscape repository
  become: true
  apt_repository: repo=ppa:inkscape.dev/stable

- name: add pycharm repository key
  become: true
  apt_key:
    url: http://archive.getdeb.net/getdeb-archive.key
    state: present

- name: add pycharm repository
  become: true
  apt_repository: repo="deb http://archive.getdeb.net/ubuntu xenial-getdeb apps"

- name: add alternative python versions repository
  become: true
  apt_repository: repo=ppa:fkrull/deadsnakes

- name: install additional programs
  become: true
  apt: name={{ item }} update_cache=yes cache_valid_time=3600
  with_items:
  - chromium-browser
  - clementine
  - gimp
  - gthumb
  - hplip  # HP printer/scanner drivers
  - inkscape
  # user needs to log in with Dropbox before running keepass
  - keepass2
  - pdfmod  # for editing PDFs
  - pycharm
  - simple-scan  # for scanner usage; backed by SANE
  - synaptic
  - texlive
  - texlive-generic-extra
  - texlive-lang-english
  - texlive-lang-polish
  - texlive-latex-extra
  - vlc

- name: set ranger bookmarks
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.config/ranger/bookmarks"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
    create: yes
  with_items:
  - { line: "c:{{ ansible_env.HOME }}/Dropbox", regexp: "^c:" }
  - { line: "D:{{ ansible_env.HOME }}/Downloads", regexp: "^D:" }
  - { line: "w:{{ ansible_env.HOME }}/development", regexp: "^w:" }
  - { line: "h:{{ ansible_env.HOME }}", regexp: "^h:" }

- name: decide if on laptop
  command: hostname
  register: host_name
  changed_when: False

- set_fact: on_laptop={{ host_name.stdout == 'b3' }}

- name: add nvidia drivers ppa
  when: not on_laptop 
  become: true
  apt_repository: repo=ppa:graphics-drivers/ppa

- name: install recommended drivers for GTX-560 Ti
  when: not on_laptop 
  become: true
  apt: name=nvidia-370 update_cache=yes

- name: set clementine settings
  ini_file:
    dest: "{{ ansible_env.HOME }}/.config/Clementine/Clementine.conf"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
  - { section: Player, option: volume, value: 100 }
  - { section: Player, option: FadeoutEnabled, value: 'false' }
  - { section: Player, option: CrossfadeEnabled, value: 'false' }
  - { section: Player, option: AutoCrossfadeEnabled, value: 'false' }
  - { section: Player, option: NoCrossfadeSameAlbum, value: 'true' }
  - { section: Player, option: FadeoutPauseEnabled, value: 'false' }
  - { section: MainWindow, option: doubleclick_playmode, value: 3 }
  - { section: MainWindow, option: startupbehaviour, value: 2 }

- set_fact: pycharm_conf_dir={{ ansible_env.HOME }}/.PyCharm2016.2/config

- name: create pycharm config dir
  file: path={{ pycharm_conf_dir }} state=directory

- name: set pycharm config
  copy: src=pycharm_settings/{{ item }} dest={{ pycharm_conf_dir }}
  with_items:
  - colors
  - inspection
  - options

- name: configure vlc
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.config/vlc/vlcrc"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  with_items:
  - { line: 'key-jump-extrashort=Left', regexp: 'key-jump-extrashort=' }
  - { line: 'key-jump+extrashort=Right', regexp: 'key-jump+extrashort=' }
  - { line: 'key-nav-left=Shift+Left', regexp: 'key-nav-left=' }
  - { line: 'key-nav-right=Shift+Right', regexp: 'key-nav-right=' }
  - { line: 'fullscreen=1', regexp: 'fullscreen=' }

