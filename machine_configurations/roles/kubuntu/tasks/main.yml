---
# TODO when hostname == b3 then font size 11

- name: set konsole settings
  copy: src=konsole/{{ item.src }} dest={{ item.dest }}
  vars:
    konsole_share: "{{ ansible_env.HOME }}/.local/share/konsole"
  with_items:
  - { src: Butla.profile, dest: '{{ konsole_share }}' }
  - { src: Linux.colorscheme, dest: '{{ konsole_share }}' }
  - { src: konsolerc, dest: "{{ ansible_env.HOME }}/.config" }

- name: add dropbox repository
  apt_repository: repo='deb http://linux.dropbox.com/ubuntu xenial main'
  become: true

- name: add dropbox package key
  apt_key: keyserver=pgp.mit.edu id=5044912E
  become: true

- name: install python-gpgme for dropbox bootstrap
  apt: name=python-gpgme
  become: true

# TODO separate out kubuntu stuff from general PC with GUI

# TODO get rid of unauthorized deb workaround when they fix it
#- name: install dropbox
#  apt: name=dropbox update_cache=yes
#  become: true
- name: install dropbox
  command: apt-get install -y --allow-unauthenticated dropbox
  register: dropbox_install
  changed_when: dropbox_install.stdout.find('is already the newest') == -1
  become: true

- name: start and install dropbox daemon
  command: dropbox start -i
  register: dropbox_start
  changed_when: dropbox_start.stdout.find('is already running!') == -1

- name: create keepass configuration directory
  file: path={{ ansible_env.HOME }}/.config/KeePass state=directory

- name: set keepass configuration
  copy: src=KeePass.config.xml dest={{ ansible_env.HOME }}/.config/KeePass

- name: add inkscape repository
  apt_repository: repo=ppa:inkscape.dev/stable
  become: true

- name: install additional programs
  apt: name={{ item }} update_cache=yes cache_valid_time=3600
  with_items:
  - chromium-browser
  - clementine
  - gimp
  - gthumb
  - hunspell
  - inkscape
  # user needs to log in with Dropbox before running keepass
  - keepass2
  - synaptic
  - vlc
  become: true

- name: create GnuPG config directory
  file: path={{ ansible_env.HOME }}/.gnupg state=directory

- name: set configuration in HOME directory
  copy: src=.pypirc dest={{ ansible_env.HOME }}
  with_items:
  - .gnupg
  - .pypirc

- name: install twine
  pip: name=twine executable=pip3 extra_args=--user

- name: setup develompent directory
  file: path={{ ansible_env.HOME }}/development state=directory

- name: set ranger bookmarks
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.config/ranger/bookmarks"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
    create: yes
  with_items:
  - { line: "c:{{ ansible_env.HOME }}/Dropbox", regexp: "^c:" }
  - { line: "D:{{ ansible_env.HOME }}/Downloads", regexp: "^D:" }
  - { line: "w:{{ ansible_env.HOME }}/development", regexp: "^w:" }
  - { line: "h:{{ ansible_env.HOME }}", regexp: "^h:" }

- name: set custom shortcuts
  copy: src=khotkeysrc dest={{ ansible_env.HOME }}/.config

# TODO co ze sccreenshotami? sa domyslne ustaione?
- name: modify global shortcuts
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.config/kglobalshortcutsrc"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  with_items:  
  - { line: 'Lock Session=Meta+L,none,Lock Session', regexp: '^Lock Session=' }
  - { line: 'MoveZoomDown=none,none,Move Zoomed Area Downwards', regexp: '^MoveZoomDown=' }
  - { line: 'Show Desktop=Meta+D,none,Show Desktop', regexp: '^Show Desktop=' }
  - line: 'Walk Through Windows=Alt+Tab,none,Walk Through Windows'
    regexp: '^Walk Through Windows='
  - line: 'Walk Through Windows (Reverse)=Alt+Shift+Backtab,none,Walk Through Windows (Reverse)'
    regexp: '^Walk Through Windows \(Reverse\)='
  - { line: 'Window Maximize=Meta+Up,none,Maximize Window', regexp: '^Window Maximize=' }
  - { line: 'Window Minimize=Meta+Down,none,Minimize Window', regexp: '^Window Minimize=' }
  - line: 'Window Quick Tile Left=Meta+Left,none,Quick Tile Window to the Left'
    regexp: '^Window Quick Tile Left='
  - line: 'Window Quick Tile Right=Meta+Right,none,Quick Tile Window to the Right'
    regexp: '^Window Quick Tile Right='
  - line: 'Window to Next Screen=Meta+Shift+Left,none,Window to Next Screen'
    regexp: '^Window to Next Screen='
  - line: 'Window to Previous Screen=Meta+Shift+Right,none,Window to Previous Screen'
    regexp: '^Window to Previous Screen='
  - line: 'activate widget 2=Meta+Q,none,Activate Application Launcher Widget'
    regexp: '.*Activate Application Launcher Widget$'
  - line: 'manage activities=none,Meta+Q,Activities...'
    regexp: '^manage activities='

- name: modify laucher hotkey
  replace:
    dest: "{{ ansible_env.HOME }}/.config/plasma-org.kde.plasma.desktop-appletsrc"
    regexp: '\[Containments\]\[1\]\[Applets\]\[2\]\[Shortcuts\]\nglobal=.*'
    replace: '[Containments][1][Applets][2][Shortcuts]\nglobal=Meta+Q'

# KUBUNTU
# kalkulator na guzik kalkulatora

#- polskie ustawienia daty, liczb, itp (ale nie cały region)
#- zegar z sekundami i datą, bold
#- sterowniki do grafiki (powinno sprawdzać, czy jest nvidia, czy radeon) / cos, zeby video dobrze chodzilo?
#- system setting/startup and shutdown/"start with an empty sesssion", też default leave option: turn off computer
#- "Configure automatic handling of removable storage media" -> "Enable automatic mounting of removable media"
#- schować w treyu: komunikatory, organizer deamon
#- w vlc przewijanie na strzałki, zamiast shift+strzałki. Navigate left/right ustawić na shift+strzałki.
#- docker (install ze skryptu i restart)
#- apt install sshpass (żeby można było konfigurować raspberry)
# pycharm z ustawieniami
# pycharm i keepass do favouritów
# wyłączenie launchera

# GŁÓWNY
# mount danych
# klucz prywatny do backupów
# backup (już nic do dropboxa, wszystko na dysk)
# bookmarks w rangerze
# thunderbird i ustawienie jego backup, muszę zgrać jego dotychczasowe wiadomości?
